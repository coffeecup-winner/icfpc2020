/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Native_File_Chooser {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Native_File_Chooser_new(arg1: ::std::os::raw::c_int) -> *mut Fl_Native_File_Chooser;
}
extern "C" {
    pub fn Fl_Native_File_Chooser_delete(self_: *mut Fl_Native_File_Chooser);
}
extern "C" {
    pub fn Fl_Native_File_Chooser_filename(
        arg1: *mut Fl_Native_File_Chooser,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Native_File_Chooser_filenames(
        arg1: *mut Fl_Native_File_Chooser,
        arg2: ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Native_File_Chooser_count(arg1: *mut Fl_Native_File_Chooser)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Native_File_Chooser_set_directory(
        arg1: *mut Fl_Native_File_Chooser,
        val: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn Fl_Native_File_Chooser_directory(
        arg1: *mut Fl_Native_File_Chooser,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Native_File_Chooser_show(arg1: *mut Fl_Native_File_Chooser) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Native_File_Chooser_set_option(
        arg1: *mut Fl_Native_File_Chooser,
        opt: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Native_File_Chooser_set_type(
        arg1: *mut Fl_Native_File_Chooser,
        typ: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Native_File_Chooser_set_title(
        arg1: *mut Fl_Native_File_Chooser,
        title: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn Fl_Native_File_Chooser_set_filter(
        arg1: *mut Fl_Native_File_Chooser,
        f: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn Fl_Native_File_Chooser_set_preset_file(
        arg1: *mut Fl_Native_File_Chooser,
        f: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn Fl_Native_File_Chooser_errmsg(
        arg1: *mut Fl_Native_File_Chooser,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn cfl_message(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        txt: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn cfl_alert(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        txt: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn cfl_choice(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        txt: *const ::std::os::raw::c_char,
        b0: *const ::std::os::raw::c_char,
        b1: *const ::std::os::raw::c_char,
        b2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cfl_input(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        txt: *const ::std::os::raw::c_char,
        deflt: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn cfl_password(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        txt: *const ::std::os::raw::c_char,
        deflt: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Help_Dialog {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Help_Dialog_new() -> *mut Fl_Help_Dialog;
}
extern "C" {
    pub fn Fl_Help_Dialog_delete(self_: *mut Fl_Help_Dialog);
}
extern "C" {
    pub fn Fl_Help_Dialog_h(arg1: *mut Fl_Help_Dialog) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Help_Dialog_hide(arg1: *mut Fl_Help_Dialog);
}
extern "C" {
    pub fn Fl_Help_Dialog_load(
        arg1: *mut Fl_Help_Dialog,
        f: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Help_Dialog_position(
        arg1: *mut Fl_Help_Dialog,
        xx: ::std::os::raw::c_int,
        yy: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Help_Dialog_resize(
        arg1: *mut Fl_Help_Dialog,
        xx: ::std::os::raw::c_int,
        yy: ::std::os::raw::c_int,
        ww: ::std::os::raw::c_int,
        hh: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Help_Dialog_show(arg1: *mut Fl_Help_Dialog);
}
extern "C" {
    pub fn Fl_Help_Dialog_set_text_size(arg1: *mut Fl_Help_Dialog, s: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Help_Dialog_text_size(arg1: *mut Fl_Help_Dialog) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Help_Dialog_set_value(arg1: *mut Fl_Help_Dialog, f: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Help_Dialog_value(arg1: *const Fl_Help_Dialog) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Help_Dialog_visible(arg1: *mut Fl_Help_Dialog) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Help_Dialog_w(arg1: *mut Fl_Help_Dialog) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Help_Dialog_x(arg1: *mut Fl_Help_Dialog) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Help_Dialog_y(arg1: *mut Fl_Help_Dialog) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_beep(type_: ::std::os::raw::c_int);
}
